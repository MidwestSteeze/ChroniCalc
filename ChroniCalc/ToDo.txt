 ToDo

 BUGS/FEATURES NOT YET CATEGORIZED:
 - Berserker Guardian Tree Inner Strength has "Damage is increased by 0% of the Berserker's current Rage" at all levels. (description uses EFFECT but skill data doesn't have any values; in game it's 6-10; pull new data and check else bug sqrbt)
 - color update of character dependant upon which tree/stat the character has the most points into (4 character gifs for each, then?)
 - alternate install location (non-OS drive)
   - will this cause issues with tossing .build files into %AppData%\Local across-drives?
 - Tree Search: Yellow highlighting is a bit hard to see in the Skill Select Panel popup

 BEFORE NEXT RELEASE:


 MAJORS:
  - Save/Open/Load/Share Builds: Swap logic back to JSON format (may need squarebit to correct the json since it's printing non-UTF8 chars)
      - could also retain use of XML within program but output as JSON (ie. JsonConvert.SerializeXmlNodeDoc())
	  - see project JsonImporter, has it working but requires adjustment to JSON
  - Stat calculation and screen (damage, health, etc)
     - Phase 1: just the totals (modifiers, mulitpliers, conversions, etc)
	 - Phase 2: actual damage numbers and dps


 CLASSES:


 INVENTORY:


 SKILLS:


 STATS: 


 TREES:


 POST BETA MISC:
	- on close of program, prompt to save build if currently modified
	- add more pastebin keys
	- SaveBuild: rework so it's not an actual SaveFileDialog but instead just a simple prompt for name of the build (ie. create your own CustomFileDialog control) and allows user to move/re-order them as well or at least click column header to order by BuildName and Stat
	- Remove tree.level entirely? it's not serialized into the Build XML and i don't think it's actually used anywhere in code
	- mastery infinite skills aren't readable with 3+ digit levels
	- look into clearing the treeStatus flag when you're done executing the logic they're being set for or return-ing out of an error handler
	- adjust all MessageBox.Show to utilize Alert() class
	- enchance Alerts.Info/Warning/Error to include MessageBoxIcon
	- modify the processes of loading external data (ie. Skill Data Export and Slot_IDs) to be a bit more automated (JSON Serializers Deserialize) so players potentially can just place the new version in a folder and re-run the application (for when i stop supporting this app)
	  - is this the best solution?  it puts dependancy on the user to update their own manually...could i create an update button instead that'd retrieve it from the git repo (this'd still require me to update it)?
	- Nav Button Icons hover text delay updates (update text before it's displayed)
	- move pastebin api dev keys into external config file so to not require an application build if more are added
    - (bug) mastery tree infinite skills don't show their value until you put a first point in

 POST RELEASE MISC:
